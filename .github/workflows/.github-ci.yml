name: learn-github-actions
on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - notmaster
jobs:
  install-cli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - run: export SFDX_AUTOUPDATE_DISABLE=false
      - run: export SFDX_USE_GENERIC_UNIX_KEYCHAIN=true
      - run: export SFDX_DOMAIN_RETRY=300
      - run: export SFDX_PROJECT_AUTOUPDATE_DISABLE_FOR_PACKAGE_CREATE=true
      - run: export SFDX_PROJECT_AUTOUPDATE_DISABLE_FOR_PACKAGE_VERSION_CREATE=true
      - run: mkdir sfdx
      - run: wget -qO- $CIURL | tar xJ -C sfdx --strip-components 1
        env : 
          CIURL: https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
      - run: "./sfdx/install"
      - run: export PATH=./sfdx/$(pwd):$PATH
      - run: sfdx update
      - run: sfdx --version
      - run: sfdx plugins --core
      -  run: which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
      -  run: eval $(ssh-agent -s) ; ssh-add <(echo "LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUJsd0FBQUFkemMyZ3RjbgpOaEFBQUFBd0VBQVFBQUFZRUFvVitLcENVbGR1V1VucE9wN0t3NTRNZ2R4YXJBRUNobmJYTkFPOUVMMDZoT2E2ekZSK3V0Ci9HWXJvYXJQSFltYnZDVTZnVXpCNFdCemhOTFZLZ0pxVmtIS1FWODRtYVdsSkxUckdSWmFneVNnb2JjeUl3Mk5tb2ZZbXcKNEFSaVIwSytvVGo3cmJxdWJtd0ppTzJ4dHZJNGZPRXRJYnd6RzhrUTkyaW5EZU1uZ2dJd0IxalVzMWhualJCZ3VGV2JpdgpYNlNJWU5KVjBXVW93bGRxR1U5TjE5VjFhTUExbENGQXk1SnJMWHl4MGFJUWVWTHV4VmhPR2c3UTJMTzFUc3dsWFFrcXpkCk5vUU1YUk13SUFQL3dzVHVrUGt4U3VjTEZWWm9TNHFPQURQOVB0OGgwWHBQNFUwNGdTcFZhUEJXMEpWMTZ0UXN3SG1RY3UKa204ZHRtRFNMSVNvL3FzWE1TVWVxdElyRjJIa3lwYlVlYUlNanNoSHhYVFpJUTRDdi9QcmFrVDFkeEdQMmY2MVZPRVhzQgpVengwR2RQR05TalI5YXRpRDFUaisyMkpyaTA4SFJmUng0dVF3OE5Dc052RHRJOEk0YU1KMXJMcC9QanFqSXpJWWlTWlJlCjVFYURvamNHSmtXckQrMDRpRmoyVmxaYTdrSWtrQVRwMUNRZzNiR2pBQUFGbUlDdFo1YUFyV2VXQUFBQUIzTnphQzF5YzIKRUFBQUdCQUtGZmlxUWxKWGJsbEo2VHFleXNPZURJSGNXcXdCQW9aMjF6UUR2UkM5T29UbXVzeFVmcnJmeG1LNkdxengySgptN3dsT29GTXdlRmdjNFRTMVNvQ2FsWkJ5a0ZmT0ptbHBTUzA2eGtXV29Na29LRzNNaU1OalpxSDJKc09BRVlrZEN2cUU0Cis2MjZybTVzQ1lqdHNiYnlPSHpoTFNHOE14dkpFUGRvcHczako0SUNNQWRZMUxOWVo0MFFZTGhWbTRyMStraUdEU1ZkRmwKS01KWGFobFBUZGZWZFdqQU5aUWhRTXVTYXkxOHNkR2lFSGxTN3NWWVRob08wTml6dFU3TUpWMEpLczNUYUVERjBUTUNBRAovOExFN3BENU1Vcm5DeFZXYUV1S2pnQXovVDdmSWRGNlQrRk5PSUVxVldqd1Z0Q1ZkZXJVTE1CNWtITHBKdkhiWmcwaXlFCnFQNnJGekVsSHFyU0t4ZGg1TXFXMUhtaURJN0lSOFYwMlNFT0FyL3o2MnBFOVhjUmo5bit0VlRoRjdBVk04ZEJuVHhqVW8KMGZXcllnOVU0L3R0aWE0dFBCMFgwY2VMa01QRFFyRGJ3N1NQQ09HakNkYXk2Zno0Nm95TXlHSWttVVh1UkdnNkkzQmlaRgpxdy90T0loWTlsWldXdTVDSkpBRTZkUWtJTjJ4b3dBQUFBTUJBQUVBQUFHQUJ2NDA2OWdRUDQ3RFdmdmNLVDF0WktoSFlnCkY4UVRiL0JHY3lLV1Z0dGNaZFg1MGxEM0RQSVZqc0d4MWp6RXZpUzh6eE5CazNiYVRZWExFbU82UFBKOTNCL2dNNldLNHMKOGVKRkxka2lJdnk3V1VhdkRZWFExUmw5OFhveDJOaExrSHVjVFdZempyeGkwNFhJNndYTlV5VFhjVWxabXFQVklCUWpkdQp4ZE5LS3dBZFJMUTh3MmpaVSt1WnhXTXdVbDFHYzA0YjA3cXM5UGJOeU01SHZqUzY4Y1gyVzA3SzVrT0c0bjV0aTRlL1VoCjhaLythTjdpdzQ1UXpwTTdFQ2NZaGNudDc1MjZiVGdwendxUWY5VUpSeW1rY2RPcFRKcFZtVHNpdTRObER4Qi90TTJkNHoKaHphWHBtOW9BVUdtb1IzSmdFS1BTUXF3WlFsRnJPK0dtZEduNHcwSTFsQ2svQnVBUkJReVhxcFRWQkJmQlNWV3djTTBkNApyK2xxSDRJYUc0S1ZtTDlwelYrZ1RSZmpqNmJrU0xDcUQ5d1BFQjVPeUt2Rk1IRFVHUzRzUWdGcjhZbUZGYjk3bTh0RUg2Cm02NmZHTGUvUzFpWnFyQWh0em1KSFZDeFFIV1o2MXFBNklaSjE0aWlsL3RyZDA4QmtlR0xjTHQ2Ykx2K0l3V093QkFBQUEKd1FDWStwVU5KRi8zTm1BRXFVU2dOVHZ2UmRKSStUVkRPcXREZG1VWmpVZWdVTEQ2dlRBWDh3QndDaUhzalp6TlpmREQ0VQpRaDBDc0QxSHBIRHVwL25NOXdGeTZGVFptN3VFVEJaYXNTbjhtNXhmeWtQN21ONzJWakpsM3pXb2F5SGVpQkdOM1FERDlmCjRBQzJWa2VJS2hxZVJHaXR6anJleDBHYWdoZUxDTHhIcXVWQU9HL3hTRnJBYis4Z0lBL2hzRldrNDFsMkY3SkJjVTF4Y3kKV0dGMmZsd3NCTmNSbEQ4NVpzN1JvTlJnTXNpWk45WWlTMVJ5YWc1ME5TQktJd3gzNEFBQURCQU10bHU1UmVhSkpYSjBKKwpaL1ZNVldoYUtmbGdiZG1LaEt3VjJ5NExaN2EvSWdROFJCekdDWXJ0QmhucjJFUzVDNk1TdFVEWnoydzhwN0JFZ0ErRXVxCm5VT09qa3pNOUVSQWlXU3pLR21sNFJjMmZqZWZLRFNwUHlZSnZ1WmwwK3R4emk3WE1ZWTJwandoZUdGOENxSDM1MTFJRUUKd252VlZLTW90WkhJazJubjM0dTBWVTBOSFk2UkJlYVNNbWJ5ZDhQZjdGZTlTT2xUVkVxUU84MlczV0t5bkdockVPWWlQTQp3MWkrcGRkNU1IcnRlRFJFUmNJNFI2OFZRVDExU200d0FBQU1FQXl4dUc0ZDdSL0JTY1QwNytlY2hCK0ZLMzIxRXRHS0I4CndaUUJxRzRuN3ZyeVpHSmk5ZnJmSHZveXJ0YWw4UzdyRTFEeTMwUklFNlMwRXVYUEhvT2QvYlIzYU4yVlorK2lhQUZaR04Kb01JQmMweXZQcFdWaFFMWkt5L0tRZFlsTzA0TXArczNvR2dZRXkvcG10eEthVDlpUThFS0c1aEM5dzVKWmVYWFNRM05PeAp4eTRlNVVxYzJyN2dNWk1ZWFdrSkYxMmxEdkZPYVZZcFdTVzg4dWhGNXNrRndyUFo5NDZkek9vb2pmRHZ6K1RINVdaY2NxCkVZOWEyNGNHSjVrZ1pCQUFBQUlXVnNiR2x2ZEM1allYUm9aWEpwYmtCamIyMW1iM0owYUMxcllYSnZieTVsZFFFPQotLS0tLUVORCBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0K" | base64 -d) ; mkdir -p ~/.ssh ; [[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config; chmod 700 ~/.ssh
         env:
           SUPER_SECRET: ${{ secrets.SSH_PRIVATE_KEY }}
      #-  run: ssh -T git@git.karoo.fr -p10022
      -  run: git config --global http.sslverify false
      -  run: git config --global user.name "KAROO CI"
      -  run: git config --global user.email "ci@karoo.fr"
      -  run: git config --global core.quotepath false
      -  run: git remote set-url --push origin "${CI_PROJECT_URL/$FIND/$REPLACE}"
         env : 
          FIND: "https://git.karoo.fr"
          REPLACE: "ssh://git@git.karoo.fr"
      -  run: git config --global url."https://project_649_bot:ynRY8_CePXmodNXgcyHH@git.karoo.fr/".insteadOf https://git.karoo.fr/
      -  run: npm config set user 0
      -  run: npm config set unsafe-perm true
      -  run: npm cache verify
      -  run: npm install "git+https://project_649_bot:ynRY8_CePXmodNXgcyHH@git.karoo.fr/licences/cidx#master" --global --loglevel=error
      -  run : cidx --help
      -  run: cidx check:gitignore
      -  run: cidx org:auth --alias=org --url="force://PlatformCLI::5Aep8617DnARqEq5Py_NUBydI.xvweduvdjpQZzvZQQVb4EI8Gwq5D3bvJPt1Dh8IANP3EDfWlx6Q==@afdas--cidx.my.salesforce.com"
         env: 
          URL_AUTH: force://PlatformCLI::5Aep8617DnARqEq5Py_NUBydI.xvweduvdjpQZzvZQQVb4EI8Gwq5D3bvJPt1Dh8IANP3EDfWlx6Q==@afdas--cidx.my.salesforce.com
      -  run: cidx org:dump -@ --alias=org --apiVersion=48.0
      -  run: git add -A
      -  run: git commit -m "$GITHUB_SHA" --allow-empty
      -  run: git push origin 
      -  run: cidx commit:deploy --alias=org --notest
      #-  run : git clone https://elliot:vkL1ERFvotU_SEzQ8Ys_@git.karoo.fr/projet-afdas/projet-afdas-sfdx
      #-  run : git remote -v



  test:
    runs-on: ubuntu-latest
    needs: [install-cli]
    steps:
      - run: echo "This job will run after install_cli".
      #- run : cidx --help
              

          


